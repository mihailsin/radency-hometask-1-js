{"version":3,"sources":["js/selectors.js","../node_modules/nanoid/url-alphabet/index.js","../node_modules/nanoid/index.browser.js","data/todos.js","js/functions.js","js/markup.js","index.js"],"names":["selectors","todoList","document","querySelector","addTodoForm","nameInput","contentInput","categoryInput","todosItems","addTodoModal","openAddTodoButton","closeAddTodoButton","categoriesList","archivedTodosList","archivedModal","openArchivedButton","closeArchivedButton","urlAlphabet","random","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","defaultSize","getRandom","mask","Math","log","length","LN2","step","size","id","j","customAlphabet","nanoid","byte","toString","toUpperCase","todos","name","created","category","content","archived","active","dates","todosHeader","categoriesHeader","archivedHeader","itemButtonsClickHandler","e","target","classList","contains","Number","splice","innerHTML","map","todo","onSubmit","preventDefault","deadlineInput","value","Date","toLocaleString","push","addEventListener","remove","add","createTodos","items","idx","join","renderTodos","targetElement","elementToRender","insertAdjacentHTML","createCategoriesList","taskList","filter","ideaList","thoughtsList","activeTasks","archivedTasks","activeIdeas","archivedIdeas","activeThoughts","archivedThoughts","createArchivedTodos"],"mappings":"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","file":"src.72669c7b.js","sourceRoot":"../src","sourcesContent":["export const selectors = {\n  todoList: document.querySelector('.table'),\n  addTodoForm: document.querySelector('.todo-form'),\n  nameInput: document.querySelector('#name'),\n  contentInput: document.querySelector('#content'),\n  categoryInput: document.querySelector('#category'),\n  todosItems: document.querySelector('.todos-items'),\n  addTodoModal: document.querySelector('.modal'),\n  openAddTodoButton: document.querySelector('.open-modal'),\n  closeAddTodoButton: document.querySelector('.close-modal'),\n  categoriesList: document.querySelector('.categories-table'),\n  archivedTodosList: document.querySelector('.archived-table'),\n  archivedModal: document.querySelector('.archived-modal'),\n  openArchivedButton: document.querySelector('.open-archived-modal'),\n  closeArchivedButton: document.querySelector('.close-archived-modal'),\n};\n","let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport { urlAlphabet }\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { nanoid } from 'nanoid';\n\nexport const todos = [\n  {\n    id: nanoid(10),\n    name: 'Shopping list',\n    created: '20.01.2022',\n    category: 'Task',\n    content: 'Potatoes,Tomatoes',\n    archived: false,\n    active: true,\n    dates: '',\n  },\n  {\n    id: nanoid(10),\n    name: 'New Feature',\n    created: '13.01.2022',\n    category: 'Idea',\n    content: 'Implement archiving notes feature',\n    archived: false,\n    active: true,\n    dates: '',\n  },\n  {\n    id: nanoid(10),\n    name: 'Travelling',\n    created: '20.01.2022',\n    category: 'Random Thought',\n    content: 'Should do something cool during vacation',\n    archived: false,\n    active: true,\n    dates: '',\n  },\n  {\n    id: nanoid(10),\n    name: '1st Hometask',\n    created: '20.01.2022',\n    category: 'Task',\n    content: 'Finish 1st hometask until 10.04.2022',\n    archived: false,\n    active: true,\n    dates: '',\n  },\n];\n","import { nanoid } from 'nanoid';\nimport { selectors } from './selectors';\nimport { todos } from '../data/todos';\nimport { renderTodos, createTodos, createCategoriesList, createArchivedTodos } from './markup';\n\nconst todosHeader = `<tr class=\"table-header__row\">\n          <th class=\"table-header__data\">Name</th>\n          <th class=\"table-header__data\">Created</th>\n          <th class=\"table-header__data\">Category</th>\n          <th class=\"table-header__data\">Content</th>\n          <th class=\"table-header__data\">Dates</th>\n          <th class=\"table-header__data\">\n          <button type=\"button\" class=\"archive-all\">archive all</button>\n          <button type=\"button\" class=\"delete-all\">delete all</button>\n          </th>\n        </tr>`;\n\nconst categoriesHeader = `<tr class=\"table-header__row\">\n            <th class=\"table-header__data\">Note Category</th>\n            <th class=\"table-header__data\">Active</th>\n            <th class=\"table-header__data\">Archived</th>\n          </tr>`;\nconst archivedHeader = `<tr class=\"table-header__row\">\n          <th class=\"table-header__data\">Name</th>\n          <th class=\"table-header__data\">Created</th>\n          <th class=\"table-header__data\">Category</th>\n          <th class=\"table-header__data\">Content</th>\n          <th class=\"table-header__data\">Dates</th>\n          <th class=\"table-header__data\">\n          <button type=\"button\" class=\"unarchive-all\">unarchive all</button>\n          <button type=\"button\" class=\"delete-all\">delete all</button>\n          </th>\n        </tr>`;\n\nconst itemButtonsClickHandler = e => {\n  if (e.target.classList.contains('delete-item')) {\n    todos[Number(e.target.id)].active = false;\n    todos.splice(Number(e.target.id), 1);\n    selectors.todoList.innerHTML = todosHeader;\n    selectors.categoriesList.innerHTML = categoriesHeader;\n    selectors.archivedTodosList.innerHTML = archivedHeader;\n    renderTodos(selectors.todoList, createTodos(todos));\n    renderTodos(selectors.categoriesList, createCategoriesList(todos));\n    renderTodos(selectors.archivedTodosList, createArchivedTodos(todos));\n  }\n\n  if (e.target.classList.contains('archive-item')) {\n    todos[Number(e.target.id)].active = false;\n    todos[Number(e.target.id)].archived = true;\n    selectors.todoList.innerHTML = todosHeader;\n    selectors.categoriesList.innerHTML = categoriesHeader;\n    selectors.archivedTodosList.innerHTML = archivedHeader;\n    renderTodos(selectors.todoList, createTodos(todos));\n    renderTodos(selectors.categoriesList, createCategoriesList(todos));\n    renderTodos(selectors.archivedTodosList, createArchivedTodos(todos));\n  }\n  if (e.target.classList.contains('unarchive-item')) {\n    todos[Number(e.target.id)].active = true;\n    todos[Number(e.target.id)].archived = false;\n    selectors.todoList.innerHTML = todosHeader;\n    selectors.categoriesList.innerHTML = categoriesHeader;\n    selectors.archivedTodosList.innerHTML = archivedHeader;\n    renderTodos(selectors.todoList, createTodos(todos));\n    renderTodos(selectors.categoriesList, createCategoriesList(todos));\n    renderTodos(selectors.archivedTodosList, createArchivedTodos(todos));\n  }\n  if (e.target.classList.contains('archive-all')) {\n    todos.map(todo => (todo.archived = true));\n    todos.map(todo => (todo.active = false));\n    selectors.todoList.innerHTML = todosHeader;\n    selectors.categoriesList.innerHTML = categoriesHeader;\n    selectors.archivedTodosList.innerHTML = archivedHeader;\n    renderTodos(selectors.todoList, createTodos(todos));\n    renderTodos(selectors.categoriesList, createCategoriesList(todos));\n    renderTodos(selectors.archivedTodosList, createArchivedTodos(todos));\n  }\n  if (e.target.classList.contains('unarchive-all')) {\n    todos.map(todo => (todo.archived = false));\n    todos.map(todo => (todo.active = true));\n    selectors.todoList.innerHTML = todosHeader;\n    selectors.categoriesList.innerHTML = categoriesHeader;\n    selectors.archivedTodosList.innerHTML = archivedHeader;\n    renderTodos(selectors.todoList, createTodos(todos));\n    renderTodos(selectors.categoriesList, createCategoriesList(todos));\n    renderTodos(selectors.archivedTodosList, createArchivedTodos(todos));\n  }\n  if (e.target.classList.contains('delete-all')) {\n    todos.splice(0, todos.length);\n    selectors.todoList.innerHTML = todosHeader;\n    selectors.categoriesList.innerHTML = categoriesHeader;\n    selectors.archivedTodosList.innerHTML = archivedHeader;\n    renderTodos(selectors.todoList, createTodos(todos));\n    renderTodos(selectors.categoriesList, createCategoriesList(todos));\n    renderTodos(selectors.archivedTodosList, createArchivedTodos(todos));\n  }\n};\n\nexport const onSubmit = e => {\n  e.preventDefault();\n  selectors.todoList.innerHTML = todosHeader;\n  selectors.categoriesList.innerHTML = categoriesHeader;\n  const { nameInput, deadlineInput, contentInput, categoryInput } = selectors;\n  const todo = {\n    id: nanoid(10),\n    [nameInput.name]: nameInput.value,\n    [contentInput.name]: contentInput.value,\n    [categoryInput.name]: categoryInput.value,\n    archived: false,\n    active: true,\n    created: new Date().toLocaleString(),\n    dates: '',\n  };\n  todos.push(todo);\n  renderTodos(selectors.todoList, createTodos(todos));\n  renderTodos(selectors.categoriesList, createCategoriesList(todos));\n};\n\nselectors.addTodoForm.addEventListener('submit', onSubmit);\n\nselectors.todoList.addEventListener('click', itemButtonsClickHandler);\nselectors.archivedTodosList.addEventListener('click', itemButtonsClickHandler);\nselectors.openAddTodoButton.addEventListener('click', e => {\n  selectors.addTodoModal.classList.remove('is-hidden');\n});\nselectors.closeAddTodoButton.addEventListener('click', e => {\n  selectors.addTodoModal.classList.add('is-hidden');\n});\n\nselectors.openArchivedButton.addEventListener('click', e => {\n  selectors.archivedModal.classList.remove('is-hidden');\n});\n\nselectors.closeArchivedButton.addEventListener('click', e => {\n  selectors.archivedModal.classList.add('is-hidden');\n});\n","import { todoList } from './selectors';\nimport { todos } from '../data/todos';\nimport { onSubmit } from './functions';\nimport { selectors } from './selectors';\n\nexport const createTodos = items =>\n  items\n    .map(({ id, name, created, category, content, dates, archived }, idx) => {\n      if (!archived)\n        return `<tr class=\"todo\">\n    <td class=\"todo__field\">${name}</td>\n    <td class=\"todo__field\">${created}</td>\n    <td class=\"todo__field\">${category}</td>\n    <td class=\"todo__field\">${content}</td>\n    <td class=\"todo__field\">${dates}</td>\n    <td class=\"todo__field\">\n    <button type=\"button\" id=\"${idx}\" class=\"archive-item\">archive</button>\n    <button type=\"button\" id=\"${idx}\" class=\"delete-item\">delete</button></td>\n    </tr>`;\n    })\n    .join('');\n\nexport const renderTodos = (targetElement, elementToRender) =>\n  targetElement.insertAdjacentHTML('beforeend', elementToRender);\n\nrenderTodos(selectors.todoList, createTodos(todos));\n\nexport const createCategoriesList = items => {\n  const taskList = items.filter(todo => todo.category === 'Task');\n  const ideaList = items.filter(todo => todo.category === 'Idea');\n  const thoughtsList = items.filter(todo => todo.category === 'Random Thought');\n  const activeTasks = taskList.filter(todo => todo.active);\n  const archivedTasks = taskList.filter(todo => todo.archived);\n  const activeIdeas = ideaList.filter(todo => todo.active);\n  const archivedIdeas = ideaList.filter(todo => todo.archived);\n  const activeThoughts = thoughtsList.filter(todo => todo.active);\n  const archivedThoughts = thoughtsList.filter(todo => todo.archived);\n  return `<tr class=\"todo\">\n    <td class=\"todo__field\">Task</td>\n    <td class=\"todo__field\">${activeTasks.length}</td>\n    <td class=\"todo__field\">${archivedTasks.length}</td>\n    </tr>\n    <tr class=\"todo\">\n    <td class=\"todo__field\">Idea</td>\n    <td class=\"todo__field\">${activeIdeas.length}</td>\n    <td class=\"todo__field\">${archivedIdeas.length}</td>\n    </tr>\n    <tr class=\"todo\">\n    <td class=\"todo__field\">Random Thought</td>\n    <td class=\"todo__field\">${activeThoughts.length}</td>\n    <td class=\"todo__field\">${archivedThoughts.length}</td>\n    </tr>`;\n};\nrenderTodos(selectors.categoriesList, createCategoriesList(todos));\n\nexport const createArchivedTodos = items =>\n  items\n    .map(({ id, name, created, category, content, dates, archived }, idx) => {\n      if (archived)\n        return `<tr class=\"todo\">\n    <td class=\"todo__field\">${name}</td>\n    <td class=\"todo__field\">${created}</td>\n    <td class=\"todo__field\">${category}</td>\n    <td class=\"todo__field\">${content}</td>\n    <td class=\"todo__field\">${dates}</td>\n    <td class=\"todo__field\">\n    <button type=\"button\" id=\"${idx}\" class=\"unarchive-item\">unarchive</button>\n    <button type=\"button\" id=\"${idx}\" class=\"delete-item\">delete</button>\n    </tr>`;\n    })\n    .join('');\nrenderTodos(selectors.archivedTodosList, createArchivedTodos(todos));\n","import './js/markup';\n"]}